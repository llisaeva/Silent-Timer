// Generated by data binding compiler. Do not edit!
package com.lisaeva.silenttimer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.lisaeva.silenttimer.R;
import com.lisaeva.silenttimer.ui.ImmediateFragment;
import com.lisaeva.silenttimer.viewmodel.ImmediateViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentImmediateBinding extends ViewDataBinding {
  @NonNull
  public final Button chooseClockTime;

  @NonNull
  public final TextView immediateTime1;

  @NonNull
  public final TextView immediateTime2;

  @NonNull
  public final TextView immediateTime3;

  @NonNull
  public final TextView immediateTime4;

  @NonNull
  public final TextView immediateUnit1;

  @NonNull
  public final TextView immediateUnit2;

  @NonNull
  public final TextView immediateUnit3;

  @NonNull
  public final TextView immediateUnit4;

  @Bindable
  protected ImmediateViewModel mViewModel;

  @Bindable
  protected ImmediateFragment mHandler;

  protected FragmentImmediateBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button chooseClockTime, TextView immediateTime1, TextView immediateTime2,
      TextView immediateTime3, TextView immediateTime4, TextView immediateUnit1,
      TextView immediateUnit2, TextView immediateUnit3, TextView immediateUnit4) {
    super(_bindingComponent, _root, _localFieldCount);
    this.chooseClockTime = chooseClockTime;
    this.immediateTime1 = immediateTime1;
    this.immediateTime2 = immediateTime2;
    this.immediateTime3 = immediateTime3;
    this.immediateTime4 = immediateTime4;
    this.immediateUnit1 = immediateUnit1;
    this.immediateUnit2 = immediateUnit2;
    this.immediateUnit3 = immediateUnit3;
    this.immediateUnit4 = immediateUnit4;
  }

  public abstract void setViewModel(@Nullable ImmediateViewModel viewModel);

  @Nullable
  public ImmediateViewModel getViewModel() {
    return mViewModel;
  }

  public abstract void setHandler(@Nullable ImmediateFragment handler);

  @Nullable
  public ImmediateFragment getHandler() {
    return mHandler;
  }

  @NonNull
  public static FragmentImmediateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_immediate, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentImmediateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentImmediateBinding>inflateInternal(inflater, R.layout.fragment_immediate, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentImmediateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_immediate, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentImmediateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentImmediateBinding>inflateInternal(inflater, R.layout.fragment_immediate, null, false, component);
  }

  public static FragmentImmediateBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentImmediateBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentImmediateBinding)bind(component, view, R.layout.fragment_immediate);
  }
}
